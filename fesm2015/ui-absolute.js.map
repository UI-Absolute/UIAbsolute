{"version":3,"file":"ui-absolute.js","sources":["ng://ui-absolute/lib/ui-absolute.service.ts","ng://ui-absolute/lib/ui-absolute.component.ts","ng://ui-absolute/models/interfaces/badges/badges.interface.ts","ng://ui-absolute/models/interfaces/spinners/spinners.interface.ts","ng://ui-absolute/models/interfaces/switches/switches.interface.ts","ng://ui-absolute/models/interfaces/buttons/buttons.interface.ts","ng://ui-absolute/models/interfaces/checkbox/checkbox.interface.ts","ng://ui-absolute/models/interfaces/radio/radio.interface.ts","ng://ui-absolute/models/interfaces/theme/theme.enum.ts","ng://ui-absolute/models/interfaces/badges/badges.enum.ts","ng://ui-absolute/models/interfaces/spinners/spinners.enum.ts","ng://ui-absolute/models/interfaces/switches/switches.enum.ts","ng://ui-absolute/models/interfaces/buttons/buttons.enum.ts","ng://ui-absolute/models/interfaces/checkbox/checkbox.enum.ts","ng://ui-absolute/models/interfaces/radio/radio.enum.ts","ng://ui-absolute/lib/modules/badges/badges.component.ts","ng://ui-absolute/lib/modules/badges/badges.module.ts","ng://ui-absolute/lib/ui-absolute.module.ts","ng://ui-absolute/lib/modules/spinners/spinners.component.ts","ng://ui-absolute/lib/modules/spinners/spinners.module.ts","ng://ui-absolute/lib/modules/switches/switches.component.ts","ng://ui-absolute/lib/modules/switches/switches.module.ts","ng://ui-absolute/lib/modules/buttons/buttons.component.ts","ng://ui-absolute/lib/modules/buttons/button-toggle/button-toggle.component.ts","ng://ui-absolute/lib/modules/buttons/buttons.module.ts","ng://ui-absolute/lib/modules/tooltip/tooltip.component.ts","ng://ui-absolute/lib/modules/tooltip/tooltip.module.ts","ng://ui-absolute/lib/modules/checkbox/checkbox.component.ts","ng://ui-absolute/lib/modules/checkbox/checkbox.module.ts","ng://ui-absolute/lib/modules/radio/radio.component.ts","ng://ui-absolute/lib/modules/radio/radio.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UiAbsoluteService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ui-absolute',\n  template: `\n    <p>\n      ui-absolute works!\n    </p>\n  `,\n  styles: []\n})\nexport class UiAbsoluteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export interface BadgesConfig {\n  bg_color?: string;\n  shape?: string;\n}\n","export interface SpinnersConfig {\n  color?: string;\n  size?: string;\n  speed?: string;\n}\n","export interface SwitchesConfig {\n  color?: string;\n  size?: string;\n}\n","export interface ButtonsConfig {\n  bg_color?: string;\n  isOutline?: boolean;\n  size?: string;\n}\n\nexport interface ButtonsToggleConfig extends ButtonsConfig {\n  group?: any;\n}\n","export interface CheckboxConfig {\n  color?: string;\n  align?: string;\n}\n","export interface RadioConfig {\n  color?: string;\n  align?: string;\n}\n","export enum UIA_THEME {\n  PRIMARY = 'primary',\n  SECONDARY = 'secondary',\n  WARNING = 'warning',\n  SUCCESS = 'success',\n  DANGER = 'danger',\n  INFO = 'info',\n  LIGHT = 'light',\n  DARK = 'dark'\n}\n","export enum BADGES_SHAPE {\n  DEFAULT = 'default',\n  ROUNDED = 'rounded'\n}\n","export enum SPINNERS_SIZE {\n  SMALL = 'small',\n  DEFAULT = 'default',\n  LARGE = 'large'\n}\n\nexport enum SPINNERS_SPEED {\n  SLOW = 'slow',\n  DEFAULT = 'default',\n  FAST = 'fast'\n}\n","export enum SWITCHES_SIZE {\n  DEFAULT = 'default',\n  LARGE = 'large'\n}\n","export enum BUTTON_SIZE {\n  DEFAULT = 'default',\n  SMALL = 'small',\n  LARGE = 'large'\n}\n","export enum CHECKBOX_ALIGN {\n  DEFAULT = 'default',\n  HORIZONTAL = 'horizontal'\n}\n","export enum RADIO_ALIGN {\n  DEFAULT = 'default',\n  HORIZONTAL = 'horizontal'\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { BadgesConfig, UIA_THEME, BADGES_SHAPE } from './../../../models';\n\n@Component({\n  selector: 'lib-uia-badge',\n  templateUrl: './badges.component.html',\n  styleUrls: ['./badges.component.scss']\n})\nexport class BadgesComponent implements OnInit {\n\n  @Input() settings: BadgesConfig;\n  @Input() value: any;\n\n  badgeSettings = {\n    bg_color: 'bg-primary',\n    text_color: 'text-white',\n    shape: ''\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n    this.applySettings(this.settings);\n  }\n\n  applySettings(settings) {\n    if (!settings) { return; }\n\n    // For setting the background color of badge based on the settings recieved\n    switch (settings.bg_color) {\n      case UIA_THEME.SECONDARY:\n        this.badgeSettings.bg_color = 'bg-secondary';\n        break;\n      case UIA_THEME.SUCCESS:\n        this.badgeSettings.bg_color = 'bg-success';\n        break;\n      case UIA_THEME.DANGER:\n        this.badgeSettings.bg_color = 'bg-danger';\n        break;\n      case UIA_THEME.WARNING:\n        this.badgeSettings.bg_color = 'bg-warning';\n        this.badgeSettings.text_color = 'text-dark';\n        break;\n      case UIA_THEME.INFO:\n        this.badgeSettings.bg_color = 'bg-info';\n        break;\n      case UIA_THEME.LIGHT:\n        this.badgeSettings.bg_color = 'bg-light';\n        this.badgeSettings.text_color = 'text-dark';\n        break;\n      case UIA_THEME.DARK:\n        this.badgeSettings.bg_color = 'bg-dark';\n        break;\n      default:\n        this.badgeSettings.bg_color = 'bg-primary';\n    }\n\n    // For setting the shape of badge based on settings recieved\n    switch (settings.shape) {\n      case BADGES_SHAPE.ROUNDED:\n        this.badgeSettings.shape = 'rounded-pill';\n        break;\n      default:\n        this.badgeSettings.shape = '';\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BadgesComponent } from './badges.component';\n\n@NgModule({\n  declarations: [\n    BadgesComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    BadgesComponent\n  ]\n})\nexport class UIABadgesModule { }\n","import { NgModule } from '@angular/core';\nimport { UIABadgesModule } from './modules/badges/badges.module';\nimport { UiAbsoluteComponent } from './ui-absolute.component';\n\n@NgModule({\n  declarations: [UiAbsoluteComponent],\n  imports: [\n    UIABadgesModule\n  ],\n  exports: [UiAbsoluteComponent]\n})\nexport class UiAbsoluteModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { SpinnersConfig, UIA_THEME, SPINNERS_SIZE, SPINNERS_SPEED } from './../../../models';\n\n@Component({\n  selector: 'lib-uia-spinner',\n  templateUrl: './spinners.component.html',\n  styleUrls: ['./spinners.component.scss']\n})\nexport class SpinnersComponent implements OnInit {\n\n  @Input() settings: SpinnersConfig;\n  @Input() loadingText: string;\n\n  spinnerSettings = {\n    color: 'text-success',\n    size: '',\n    speed: '0.75s'\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n    this.applySettings(this.settings);\n  }\n\n  applySettings(settings) {\n    if (!settings) { return; }\n\n    // For setting the background color of badge based on the settings recieved\n    switch (settings.color) {\n      case UIA_THEME.SECONDARY:\n        this.spinnerSettings.color = 'text-secondary';\n        break;\n      case UIA_THEME.SUCCESS:\n        this.spinnerSettings.color = 'text-success';\n        break;\n      case UIA_THEME.DANGER:\n        this.spinnerSettings.color = 'text-danger';\n        break;\n      case UIA_THEME.WARNING:\n        this.spinnerSettings.color = 'text-warning';\n        break;\n      case UIA_THEME.INFO:\n        this.spinnerSettings.color = 'text-info';\n        break;\n      case UIA_THEME.LIGHT:\n        this.spinnerSettings.color = 'text-light';\n        break;\n      case UIA_THEME.DARK:\n        this.spinnerSettings.color = 'text-dark';\n        break;\n      default:\n        this.spinnerSettings.color = 'text-primary';\n    }\n    switch (settings.size) {\n      case SPINNERS_SIZE.SMALL:\n        this.spinnerSettings.size = 'spinner-border-sm';\n        break;\n      case SPINNERS_SIZE.LARGE:\n        this.spinnerSettings.size = 'spinner-border-lg';\n        break;\n      default:\n        this.spinnerSettings.size = '';\n    }\n    switch (settings.speed) {\n      case SPINNERS_SPEED.SLOW:\n        this.spinnerSettings.speed = '2s';\n        break;\n      case SPINNERS_SPEED.FAST:\n        this.spinnerSettings.speed = '0.25s';\n        break;\n      default:\n        this.spinnerSettings.speed = '0.75s';\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SpinnersComponent } from './spinners.component';\n\n@NgModule({\n  declarations: [\n    SpinnersComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    SpinnersComponent\n  ]\n})\nexport class UIASpinnersModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { SwitchesConfig, SWITCHES_SIZE, UIA_THEME } from './../../../models';\n\n@Component({\n  selector: 'lib-uia-switch',\n  templateUrl: './switches.component.html',\n  styleUrls: ['./switches.component.scss']\n})\nexport class SwitchesComponent implements OnInit {\n\n  @Input() settings: SwitchesConfig;\n  @Input() checked: boolean;\n  @Input() disabled: boolean;\n\n  switchSettings = {\n    color: 'switch-success',\n    size: ''\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n    this.applySettings(this.settings);\n  }\n\n  applySettings(settings) {\n    if (!settings) { return; }\n\n    switch (settings.color) {\n      case UIA_THEME.SECONDARY:\n        this.switchSettings.color = 'switch-secondary';\n        break;\n      case UIA_THEME.SUCCESS:\n        this.switchSettings.color = 'switch-success';\n        break;\n      case UIA_THEME.DANGER:\n        this.switchSettings.color = 'switch-danger';\n        break;\n      case UIA_THEME.WARNING:\n        this.switchSettings.color = 'switch-warning';\n        break;\n      case UIA_THEME.INFO:\n        this.switchSettings.color = 'switch-info';\n        break;\n      case UIA_THEME.LIGHT:\n        this.switchSettings.color = 'switch-light';\n        break;\n      case UIA_THEME.DARK:\n        this.switchSettings.color = 'switch-dark';\n        break;\n      default:\n        this.switchSettings.color = 'switch-primary';\n    }\n    switch (settings.size) {\n      case SWITCHES_SIZE.LARGE:\n        this.switchSettings.size = '';\n        break;\n        default:\n          this.switchSettings.size = 'switch-sm';\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SwitchesComponent } from './switches.component';\n\n@NgModule({\n  declarations: [\n    SwitchesComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    SwitchesComponent\n  ]\n})\nexport class UIASwitchesModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ButtonsConfig, BUTTON_SIZE, UIA_THEME } from './../../../models';\n\n@Component({\n  selector: 'lib-uia-button',\n  templateUrl: './buttons.component.html',\n  styleUrls: ['./buttons.component.scss']\n})\nexport class ButtonsComponent implements OnInit {\n\n  @Input() settings: ButtonsConfig;\n  @Input() value: any;\n\n  buttonSettings = {\n    bg_color: 'btn-primary',\n    text_color: '',\n    size: '',\n    isOutline: false\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n    this.applySettings(this.settings);\n  }\n\n  applySettings(settings) {\n    if (!settings) { return; }\n\n    switch (settings.bg_color) {\n      case UIA_THEME.SECONDARY:\n        this.buttonSettings.bg_color = settings.isOutline ? 'btn-outline-secondary' : 'btn-secondary';\n        this.buttonSettings.text_color = settings.isOutline ? '' : 'text-white';\n        break;\n      case UIA_THEME.SUCCESS:\n        this.buttonSettings.bg_color = settings.isOutline ? 'btn-outline-success' : 'btn-success';\n        this.buttonSettings.text_color = settings.isOutline ? '' : 'text-white';\n        break;\n      case UIA_THEME.DANGER:\n        this.buttonSettings.bg_color = settings.isOutline ? 'btn-outline-danger' : 'btn-danger';\n        this.buttonSettings.text_color = settings.isOutline ? '' : 'text-white';\n        break;\n      case UIA_THEME.WARNING:\n        this.buttonSettings.bg_color = settings.isOutline ? 'btn-outline-warning' : 'btn-warning';\n        this.buttonSettings.text_color = settings.isOutline ? '' : 'text-dark';\n        break;\n      case UIA_THEME.INFO:\n        this.buttonSettings.bg_color = settings.isOutline ? 'btn-outline-info' : 'btn-info';\n        this.buttonSettings.text_color = settings.isOutline ? '' : 'text-white';\n        break;\n      case UIA_THEME.LIGHT:\n        this.buttonSettings.bg_color = settings.isOutline ? 'btn-outline-light' : 'btn-light';\n        this.buttonSettings.text_color = settings.isOutline ? '' : 'text-dark';\n        break;\n      case UIA_THEME.DARK:\n        this.buttonSettings.bg_color = settings.isOutline ? 'btn-outline-dark' : 'btn-dark';\n        this.buttonSettings.text_color = settings.isOutline ? '' : 'text-white';\n        break;\n      default:\n        this.buttonSettings.bg_color = settings.isOutline ? 'btn-outline-primary' : 'btn-primary';\n        this.buttonSettings.text_color = settings.isOutline ? '' : 'text-white';\n    }\n\n    this.buttonSettings.size = (settings.size === BUTTON_SIZE.LARGE) ? 'btn-lg'\n                                : (settings.size === BUTTON_SIZE.SMALL) ? 'btn-sm'\n                                : '';\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ButtonsToggleConfig, BUTTON_SIZE, UIA_THEME } from './../../../../models';\n\n@Component({\n  selector: 'lib-uia-button-toggle',\n  templateUrl: './button-toggle.component.html',\n  styleUrls: ['./button-toggle.component.scss']\n})\nexport class ButtonToggleComponent implements OnInit {\n\n  @Input() settings: ButtonsToggleConfig;\n  @Input() value: any;\n  @Input() checked: boolean;\n\n  buttonToggleSettings = {\n    bg_color: 'btn-primary',\n    text_color: '',\n    size: '',\n    isOutline: false\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n    this.applySettings(this.settings);\n  }\n\n  applySettings(settings) {\n    if (!settings) { return; }\n\n    switch (settings.bg_color) {\n      case UIA_THEME.SECONDARY:\n        this.buttonToggleSettings.bg_color = settings.isOutline ? 'btn-outline-secondary' : 'btn-secondary';\n        this.buttonToggleSettings.text_color = settings.isOutline ? '' : 'text-white';\n        break;\n      case UIA_THEME.SUCCESS:\n        this.buttonToggleSettings.bg_color = settings.isOutline ? 'btn-outline-success' : 'btn-success';\n        this.buttonToggleSettings.text_color = settings.isOutline ? '' : 'text-white';\n        break;\n      case UIA_THEME.DANGER:\n        this.buttonToggleSettings.bg_color = settings.isOutline ? 'btn-outline-danger' : 'btn-danger';\n        this.buttonToggleSettings.text_color = settings.isOutline ? '' : 'text-white';\n        break;\n      case UIA_THEME.WARNING:\n        this.buttonToggleSettings.bg_color = settings.isOutline ? 'btn-outline-warning' : 'btn-warning';\n        this.buttonToggleSettings.text_color = settings.isOutline ? '' : 'text-dark';\n        break;\n      case UIA_THEME.INFO:\n        this.buttonToggleSettings.bg_color = settings.isOutline ? 'btn-outline-info' : 'btn-info';\n        this.buttonToggleSettings.text_color = settings.isOutline ? '' : 'text-white';\n        break;\n      case UIA_THEME.LIGHT:\n        this.buttonToggleSettings.bg_color = settings.isOutline ? 'btn-outline-light' : 'btn-light';\n        this.buttonToggleSettings.text_color = settings.isOutline ? '' : 'text-dark';\n        break;\n      case UIA_THEME.DARK:\n        this.buttonToggleSettings.bg_color = settings.isOutline ? 'btn-outline-dark' : 'btn-dark';\n        this.buttonToggleSettings.text_color = settings.isOutline ? '' : 'text-white';\n        break;\n      default:\n        this.buttonToggleSettings.bg_color = settings.isOutline ? 'btn-outline-primary' : 'btn-primary';\n        this.buttonToggleSettings.text_color = settings.isOutline ? '' : 'text-white';\n    }\n\n    this.buttonToggleSettings.size = (settings.size === BUTTON_SIZE.LARGE) ? 'btn-lg'\n                                : (settings.size === BUTTON_SIZE.SMALL) ? 'btn-sm'\n                                : '';\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonsComponent } from './buttons.component';\nimport { ButtonToggleComponent } from './button-toggle/button-toggle.component';\n\n@NgModule({\n  declarations: [\n    ButtonsComponent,\n    ButtonToggleComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ButtonsComponent,\n    ButtonToggleComponent\n  ]\n})\nexport class UIAButtonsModule { }\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-uia-tooltip',\n  templateUrl: './tooltip.component.html',\n  styleUrls: ['./tooltip.component.scss']\n})\nexport class TooltipComponent implements OnInit, AfterViewInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n\n  ngAfterViewInit() { }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TooltipComponent } from './tooltip.component';\n\n@NgModule({\n  declarations: [\n    TooltipComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TooltipComponent\n  ]\n})\nexport class UIATooltipModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { CheckboxConfig, CHECKBOX_ALIGN, UIA_THEME } from './../../../models';\n\n@Component({\n  selector: 'lib-uia-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent implements OnInit {\n\n  @Input() settings: CheckboxConfig;\n\n  checkboxSettings = {\n    color: '',\n    align: ''\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n    this.applySettings(this.settings);\n  }\n\n  applySettings(settings) {\n    if (!settings) { return; }\n\n    // For setting the color of checkbox based on the settings recieved\n    switch (settings.color) {\n      case UIA_THEME.SECONDARY:\n        this.checkboxSettings.color = 'checkbox-secondary';\n        break;\n      case UIA_THEME.SUCCESS:\n        this.checkboxSettings.color = 'checkbox-success';\n        break;\n      case UIA_THEME.DANGER:\n        this.checkboxSettings.color = 'checkbox-danger';\n        break;\n      case UIA_THEME.WARNING:\n        this.checkboxSettings.color = 'checkbox-warning';\n        break;\n      case UIA_THEME.INFO:\n        this.checkboxSettings.color = 'checkbox-info';\n        break;\n      case UIA_THEME.LIGHT:\n        this.checkboxSettings.color = 'checkbox-light';\n        break;\n      case UIA_THEME.DARK:\n        this.checkboxSettings.color = 'checkbox-dark';\n        break;\n      default:\n        this.checkboxSettings.color = 'checkbox-primary';\n    }\n\n    switch (settings.align) {\n      case CHECKBOX_ALIGN.HORIZONTAL:\n        this.checkboxSettings.align = 'checkbox-inline';\n        break;\n      default:\n        this.checkboxSettings.align = '';\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CheckboxComponent } from './checkbox.component';\n\n@NgModule({\n  declarations: [\n    CheckboxComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    CheckboxComponent\n  ]\n})\nexport class UIACheckboxModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { RadioConfig, RADIO_ALIGN, UIA_THEME } from './../../../models';\n\n@Component({\n  selector: 'lib-uia-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss']\n})\nexport class RadioComponent implements OnInit {\n\n  @Input() settings: RadioConfig;\n\n  radioSettings = {\n    color: '',\n    align: ''\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n    this.applySettings(this.settings);\n  }\n\n  applySettings(settings) {\n    if (!settings) { return; }\n\n    // For setting the color of radio based on the settings recieved\n    switch (settings.color) {\n      case UIA_THEME.SECONDARY:\n        this.radioSettings.color = 'radio-secondary';\n        break;\n      case UIA_THEME.SUCCESS:\n        this.radioSettings.color = 'radio-success';\n        break;\n      case UIA_THEME.DANGER:\n        this.radioSettings.color = 'radio-danger';\n        break;\n      case UIA_THEME.WARNING:\n        this.radioSettings.color = 'radio-warning';\n        break;\n      case UIA_THEME.INFO:\n        this.radioSettings.color = 'radio-info';\n        break;\n      case UIA_THEME.LIGHT:\n        this.radioSettings.color = 'radio-light';\n        break;\n      case UIA_THEME.DARK:\n        this.radioSettings.color = 'radio-dark';\n        break;\n      default:\n        this.radioSettings.color = 'radio-primary';\n    }\n\n    switch (settings.align) {\n      case RADIO_ALIGN.HORIZONTAL:\n        this.radioSettings.align = 'radio-inline';\n        break;\n      default:\n        this.radioSettings.align = '';\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RadioComponent } from './radio.component';\n\n@NgModule({\n  declarations: [\n    RadioComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    RadioComponent\n  ]\n})\nexport class UIARadioModule { }\n"],"names":[],"mappings":"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"}